# Generated by Django 3.2.25 on 2025-10-24 13:01

import django.core.validators
from django.db import migrations, models
import django.utils.timezone
import djongo.models.fields


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='ActiveDevicesTrend',
            fields=[
                ('_id', djongo.models.fields.ObjectIdField(auto_created=True, primary_key=True, serialize=False)),
                ('week_start_date', models.DateField(help_text='Start date of the week (Monday)')),
                ('day_of_week', models.CharField(choices=[('monday', 'Monday'), ('tuesday', 'Tuesday'), ('wednesday', 'Wednesday'), ('thursday', 'Thursday'), ('friday', 'Friday'), ('saturday', 'Saturday'), ('sunday', 'Sunday')], help_text='Day of the week', max_length=10)),
                ('active_devices_count', models.PositiveIntegerField(default=0, help_text='Number of active devices for this day')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Active Devices Trend',
                'verbose_name_plural': 'Active Devices Trends',
                'db_table': 'active_devices_trend',
                'ordering': ['week_start_date', 'day_of_week'],
            },
        ),
        migrations.CreateModel(
            name='DashboardMetrics',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField(default=django.utils.timezone.now, help_text='Date for which metrics are recorded')),
                ('active_users', models.PositiveIntegerField(default=0, help_text='Number of active users')),
                ('overdue_accounts', models.PositiveIntegerField(default=0, help_text='Number of overdue accounts')),
                ('disconnected_accounts', models.PositiveIntegerField(default=0, help_text='Number of disconnected accounts')),
                ('collector_performance', models.DecimalField(decimal_places=2, default=0.0, help_text='Collector performance percentage (0-100)', max_digits=5, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(100)])),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Dashboard Metrics',
                'verbose_name_plural': 'Dashboard Metrics',
                'db_table': 'dashboard_metrics',
                'ordering': ['-date'],
            },
        ),
        migrations.CreateModel(
            name='DashboardSnapshot',
            fields=[
                ('_id', djongo.models.fields.ObjectIdField(auto_created=True, primary_key=True, serialize=False)),
                ('snapshot_date', models.DateTimeField(default=django.utils.timezone.now, help_text='Date and time when snapshot was taken')),
                ('active_users', models.PositiveIntegerField(default=0)),
                ('overdue_accounts', models.PositiveIntegerField(default=0)),
                ('disconnected_accounts', models.PositiveIntegerField(default=0)),
                ('collector_performance', models.DecimalField(decimal_places=2, default=0.0, max_digits=5)),
                ('active_devices_trend', djongo.models.fields.JSONField(default=dict, help_text='Weekly active devices trend data')),
                ('weekly_collections', djongo.models.fields.JSONField(default=dict, help_text='Weekly collections data')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'verbose_name': 'Dashboard Snapshot',
                'verbose_name_plural': 'Dashboard Snapshots',
                'db_table': 'dashboard_snapshots',
                'ordering': ['-snapshot_date'],
            },
        ),
        migrations.CreateModel(
            name='WeeklyCollection',
            fields=[
                ('_id', djongo.models.fields.ObjectIdField(auto_created=True, primary_key=True, serialize=False)),
                ('week_number', models.PositiveSmallIntegerField(help_text='Week number of the year (1-53)', validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(53)])),
                ('year', models.PositiveSmallIntegerField(help_text='Year of the collection')),
                ('week_start_date', models.DateField(help_text='Start date of the week (Monday)')),
                ('total_collection', models.DecimalField(decimal_places=2, default=0.0, help_text='Total collection amount for the week', max_digits=10, validators=[django.core.validators.MinValueValidator(0)])),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Weekly Collection',
                'verbose_name_plural': 'Weekly Collections',
                'db_table': 'weekly_collections',
                'ordering': ['year', 'week_number'],
            },
        ),
        migrations.AddIndex(
            model_name='weeklycollection',
            index=models.Index(fields=['year', 'week_number'], name='weekly_coll_year_f1938c_idx'),
        ),
        migrations.AddIndex(
            model_name='weeklycollection',
            index=models.Index(fields=['week_start_date'], name='weekly_coll_week_st_5e5872_idx'),
        ),
        migrations.AddIndex(
            model_name='dashboardsnapshot',
            index=models.Index(fields=['snapshot_date'], name='dashboard_s_snapsho_221b57_idx'),
        ),
        migrations.AddIndex(
            model_name='dashboardmetrics',
            index=models.Index(fields=['date'], name='dashboard_m_date_8b5000_idx'),
        ),
        migrations.AddIndex(
            model_name='activedevicestrend',
            index=models.Index(fields=['week_start_date'], name='active_devi_week_st_5e9ade_idx'),
        ),
        migrations.AddIndex(
            model_name='activedevicestrend',
            index=models.Index(fields=['day_of_week'], name='active_devi_day_of__395bc4_idx'),
        ),
    ]
